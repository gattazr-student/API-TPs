[API-TP] 4 

# Excercice 1
#############

function lireTableau(aFileName: in String) return Integer is
	wFile : Ada.Text_IO.File_Type;
	wNbLigne : integer;

begin -- lireTableau(aFileName: String)
	Ada.Text_Io.Open(wFile, Ada.Text_IO.In_File, aFileName);
	wNbLigne := 0;

	while wNbLigne < NMAX and not Ada.Text_IO.End_Of_File(wFile) loop
		declare
			wLine : String := Ada.Text_IO.Get_Line(wFile);
			begin
				wNbLigne:= wNbLigne+1;
				A(wNbLigne) := Integer'Value(wLine);
			end;
	end loop;
	Ada.Text_Io.Close(wFile);
	return wNbLigne;

end lireTableau;


procedure testtri is
	[...]
begin
	if (Ada.Command_Line.Argument_Count = 1) then
		wSize := lireTableau(Ada.Command_Line.Argument(1));
		TestUnTri(wSize);
	end if;
end testtri;


# Exercice 2
############

procedure testUnTri(N : in integer; aFileName : in String) is

	Temps1, Temps2: Ada.Real_Time.Time;
	Duree: Ada.Real_Time.Time_Span;
	compteurTests: integer;
	wFile : Ada.Text_IO.File_Type;

begin

	-- Affichage eventuel du tableau avant tri
	if AFFICHAGE then
		for k in 1..N loop
			Ada.Integer_Text_Io.Put(A(k));
			Ada.Text_Io.New_Line;
		end loop;
		Ada.Text_Io.New_Line;
	end if;

	Temps1 := Ada.Real_Time.Clock;
	compteurTests := 0;

	-- Tri du tableau par insertion
	-- triParInsertion(N, compteurTests);

	-- Tri du tableau par tri rapide
	triRapide(1, N, compteurTests);

	-- Affichage eventuel du tableau apres tri
	Temps2 := Ada.Real_Time.Clock;
	Duree := Temps2 - Temps1;

	if AFFICHAGE then
		for k in 1..N loop
			Ada.Integer_Text_Io.Put(A(k));
			Ada.Text_Io.New_Line;
		end loop;
		Ada.Text_Io.New_Line;
	end if;

	Ada.Text_Io.Create(wFile, Ada.Text_IO.Out_File, aFileName & ".txt");
	for k in 1..N loop
		Ada.Text_Io.Put_Line(wFile, Integer'Image(A(k)));
	end loop;
	Ada.Text_Io.Close(wFile);

	
	Ada.Text_Io.Create(wFile, Ada.Text_IO.Out_File, aFileName & ".time.txt");
	Ada.Text_Io.Put_Line(wFile, "Duree du tri en millisecondes: " & Integer'Image(Duree / Milliseconds(1)));
	Ada.Text_Io.Close(wFile);

	Ada.Text_Io.Create(wFile, Ada.Text_IO.Out_File, aFileName & ".aff.txt");
	Ada.Text_Io.Put_Line(wFile, "Pour" & Integer'Image(N) & " Elements " & Integer'Image(compteurTests) & " tests effectuÃ©s");
	Ada.Text_Io.Close(wFile);

end testUnTri;

procedure testtri is
	[...]
begin
	if (Ada.Command_Line.Argument_Count = 2) then
		wSize := lireTableau(Ada.Command_Line.Argument(1));
		TestUnTri(wSize, Ada.Command_Line.Argument(2));
	end if;
end testtri;

# Exercice 3
############

